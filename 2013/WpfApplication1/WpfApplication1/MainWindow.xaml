<Window x:Class="WpfApplication1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:WpfApplication1"
        Title="Layout Demo" 
        >
    <Window.Resources>

        <local:PriorityConverter x:Key="stringToIsCheckedConverter" />
        
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="#FF212121" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="True">
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFF3F9FF"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FF5593FF"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFE6E6E6"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FFBCBCBC"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFD9ECFF"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FF3C77DD"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <DockPanel LastChildFill="True">

        <Menu DockPanel.Dock="Top">
            
            <MenuItem Header="_File">
                <MenuItem Header="E_xit"/>
            </MenuItem>

            <MenuItem Header="_Help">
                <MenuItem Header="_About"/>
            </MenuItem>
            
        </Menu>

        <StatusBar DockPanel.Dock="Bottom">
            
            <TextBlock Style="{StaticResource StatusText}" Text="{Binding ElementName=todoGrid, Path=SelectedItem}"/>
            
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
        
			<Grid ShowGridLines="True" Grid.Row="0" DataContext="{Binding ElementName=todoGrid, Path=SelectedItem}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<TextBlock Text="Title" Grid.Row="0" Grid.Column="0" />
				<TextBlock Text="Due Date" Grid.Row="1" Grid.Column="0" />
				<TextBlock Text="Priority" Grid.Row="2" Grid.Column="0"  />
				<TextBlock Text="Owner" Grid.Row="3" Grid.Column="0"  />
				<TextBlock Text="Description" Grid.Row="4" Grid.Column="0" />
			   
				<TextBox Text="{Binding Title}" Grid.Row="0" Grid.Column="1"/>
				<TextBox Text="{Binding DueDate, StringFormat=dd/MM/yyyy}" Grid.Row="1" Grid.Column="1"/>
				<StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="1">
					<RadioButton 
						Content="High" 
						IsChecked="{Binding Priority, Converter={StaticResource stringToIsCheckedConverter}, ConverterParameter=high}"
						/>

					<RadioButton 
						Content="Medium" 
						IsChecked="{Binding Priority, Converter={StaticResource stringToIsCheckedConverter}, ConverterParameter=medium}"
						/>

					<RadioButton 
						Content="Low" 
						IsChecked="{Binding Priority, Converter={StaticResource stringToIsCheckedConverter}, ConverterParameter=low}"
						/>
				</StackPanel>

				<TextBox Text="{Binding Owner}" Grid.Row="3" Grid.Column="1" />

				<TextBox 
					Text="{Binding Description}"
					Grid.Row="4" Grid.Column="1"
					 AcceptsReturn="True"
					 VerticalAlignment="Stretch"
					 />

			</Grid>

            <StackPanel Orientation="Horizontal"
                        Grid.Row="1"
						HorizontalAlignment="Right"
                        >
                <Button Content="Save" Height="20" VerticalAlignment="Top" Click="Button_Click_1"/>
                <Button Content="Cancel"/>
                
            </StackPanel>

            <DataGrid x:Name="todoGrid" Grid.Row="2" ItemsSource="{Binding Items}" AutoGenerateColumns="False">
              
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Task Title" Binding="{Binding Title}"/>
                    <DataGridTextColumn Header="Due Date" Binding="{Binding DueDate, StringFormat=MM/dd/yyyy}"/>
                    <DataGridTextColumn Header="Owner" Binding="{Binding Owner}"/>
                </DataGrid.Columns>
                
            </DataGrid>
        </Grid>
    </DockPanel>
</Window>
